{{- if .Values.ingress.enabled -}}
  {{- $fullName := include "spacedeck.fullname" . -}}
  {{- $svcPort := .Values.service.port | default 8080 -}}
  {{- $defaultHosts := list }}
  {{- $controller :=  .Values.ingress.class | default "nginx" }}
  {{- $namespace :=   .Values.namespace | default .Release.Namespace }}
  {{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
  {{- end }}
  {{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
  {{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
  {{- else -}}
apiVersion: networking.k8s.io/v1
  {{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  namespace: {{ $namespace }}

  labels:
    {{- include "spacedeck.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ $controller }}
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
  {{- $defaultHost := printf "%s.gigaspaces.net" $namespace }}
  {{- $host := .Values.ingress.host | default $defaultHost }}
  - host: {{ $host }}
    http:
      paths:
      - path:  /
        pathType: Prefix
        backend:
          service:
            name: {{ $fullName }}
            port:
              number: {{ $svcPort }}
      {{- end }}