apiVersion: v1
kind: ConfigMap
metadata:
  name: flink-config
data:
  flink-conf.yaml: |+
    high-availability.cluster-id: {{ .Values.highAvailability.clusterId }}
    high-availability: {{ .Values.highAvailability.type }}
    high-availability.zookeeper.quorum: {{ .Values.highAvailability.zookeeperQuorum }}
    high-availability.storageDir: {{ .Values.highAvailability.dir }}
    restart-strategy.type: fixed-delay
    restart-strategy.fixed-delay.attempts: 10
    jobmanager.bind-host: 0.0.0.0
    taskmanager.numberOfTaskSlots: {{ .Values.taskmanager.numberOfTaskSlots }}
    blob.server.port: 6124
    jobmanager.rpc.port: 6123
    taskmanager.rpc.port: 6122
    queryable-state.proxy.ports: 6125
    jobmanager.memory.process.size: {{ .Values.jobmanager.memoryProcessSize }}
    taskmanager.memory.process.size: {{ .Values.taskmanager.memoryProcessSize }}
    jobmanager.memory.jvm-metaspace.size: {{ .Values.jobmanager.jvmMetaspaceSize }}
    taskmanager.memory.jvm-metaspace.size: {{ .Values.jobmanager.jvmMetaspaceSize }}
    state.backend: filesystem
    state.checkpoints.dir: file://{{ .Values.checkpoints.dir }}
    state.savepoints.dir: file://{{ .Values.savepoints.dir }}
    web.upload.dir: {{ .Values.jobmanager.webUploadDir }}
    {{- if .Values.metrics.enabled }}
    metrics.reporters: influxdb

    metrics.reporter.influxdb.factory.class: org.apache.flink.metrics.influxdb.InfluxdbReporterFactory
    metrics.reporter.influxdb.scheme: http
    metrics.reporter.influxdb.host: {{ .Values.metrics.host }}
    metrics.reporter.influxdb.port: {{ .Values.metrics.port }}
    metrics.reporter.influxdb.db: {{ .Values.metrics.db }}
    metrics.reporter.influxdb.consistency: ANY
    metrics.reporter.influxdb.connectTimeout: 60000
    metrics.reporter.influxdb.writeTimeout: 60000
    metrics.reporter.influxdb.interval: 60 SECONDS
    metrics.job.status.enable: STATE
    {{- end }}
  log4j-console.properties: |+
    # This affects logging for both user code and Flink
    rootLogger.level = {{ .Values.rootLoggerLevel }}
    rootLogger.appenderRef.console.ref = ConsoleAppender
    rootLogger.appenderRef.rolling.ref = RollingFileAppender
    # Uncomment this if you want to _only_ change Flink's logging
    #logger.flink.name = org.apache.flink
    #logger.flink.level = INFO
    # The following lines keep the log level of common libraries/connectors on
    # log level INFO. The root logger does not override this. You have to manually
    # change the log levels here.
    logger.akka.name = akka
    logger.akka.level = INFO
    logger.kafka.name= org.apache.kafka
    logger.kafka.level = INFO
    logger.hadoop.name = org.apache.hadoop
    logger.hadoop.level = INFO
    logger.zookeeper.name = org.apache.zookeeper
    logger.zookeeper.level = INFO
    # Log all infos to the console
    appender.console.name = ConsoleAppender
    appender.console.type = CONSOLE
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n
    # Log all infos in the given rolling file
    appender.rolling.name = RollingFileAppender
    appender.rolling.type = RollingFile
    appender.rolling.append = false
    appender.rolling.fileName = ${sys:log.file}
    appender.rolling.filePattern = ${sys:log.file}.%i
    appender.rolling.layout.type = PatternLayout
    appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n
    appender.rolling.policies.type = Policies
    appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
    appender.rolling.policies.size.size=5MB
    appender.rolling.strategy.type = DefaultRolloverStrategy
    appender.rolling.strategy.max = 20
    # Suppress the irrelevant (wrong) warnings from the Netty channel handler
    logger.netty.name = org.jboss.netty.channel.DefaultChannelPipeline
    logger.netty.level = OFF